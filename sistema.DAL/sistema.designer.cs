#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sistema.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Goniotech")]
	public partial class sistemaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAluno(Aluno instance);
    partial void UpdateAluno(Aluno instance);
    partial void DeleteAluno(Aluno instance);
    partial void InsertSexo(Sexo instance);
    partial void UpdateSexo(Sexo instance);
    partial void DeleteSexo(Sexo instance);
    partial void InsertArea(Area instance);
    partial void UpdateArea(Area instance);
    partial void DeleteArea(Area instance);
    partial void InsertAvaliacao(Avaliacao instance);
    partial void UpdateAvaliacao(Avaliacao instance);
    partial void DeleteAvaliacao(Avaliacao instance);
    partial void InsertAvaliador(Avaliador instance);
    partial void UpdateAvaliador(Avaliador instance);
    partial void DeleteAvaliador(Avaliador instance);
    partial void InsertCotovelo(Cotovelo instance);
    partial void UpdateCotovelo(Cotovelo instance);
    partial void DeleteCotovelo(Cotovelo instance);
    partial void InsertDisciplina(Disciplina instance);
    partial void UpdateDisciplina(Disciplina instance);
    partial void DeleteDisciplina(Disciplina instance);
    partial void InsertFisioterapeuta(Fisioterapeuta instance);
    partial void UpdateFisioterapeuta(Fisioterapeuta instance);
    partial void DeleteFisioterapeuta(Fisioterapeuta instance);
    partial void InsertOmbro(Ombro instance);
    partial void UpdateOmbro(Ombro instance);
    partial void DeleteOmbro(Ombro instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertPunho(Punho instance);
    partial void UpdatePunho(Punho instance);
    partial void DeletePunho(Punho instance);
    #endregion
		
		public sistemaDataContext() : 
				base(global::sistema.DAL.Properties.Settings.Default.GoniotechConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sistemaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sistemaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sistemaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sistemaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Aluno> Alunos
		{
			get
			{
				return this.GetTable<Aluno>();
			}
		}
		
		public System.Data.Linq.Table<Sexo> Sexos
		{
			get
			{
				return this.GetTable<Sexo>();
			}
		}
		
		public System.Data.Linq.Table<Area> Areas
		{
			get
			{
				return this.GetTable<Area>();
			}
		}
		
		public System.Data.Linq.Table<Atende> Atendes
		{
			get
			{
				return this.GetTable<Atende>();
			}
		}
		
		public System.Data.Linq.Table<Avaliacao> Avaliacaos
		{
			get
			{
				return this.GetTable<Avaliacao>();
			}
		}
		
		public System.Data.Linq.Table<Avaliador> Avaliadors
		{
			get
			{
				return this.GetTable<Avaliador>();
			}
		}
		
		public System.Data.Linq.Table<Cotovelo> Cotovelos
		{
			get
			{
				return this.GetTable<Cotovelo>();
			}
		}
		
		public System.Data.Linq.Table<Disciplina> Disciplinas
		{
			get
			{
				return this.GetTable<Disciplina>();
			}
		}
		
		public System.Data.Linq.Table<Estuda> Estudas
		{
			get
			{
				return this.GetTable<Estuda>();
			}
		}
		
		public System.Data.Linq.Table<Fisioterapeuta> Fisioterapeutas
		{
			get
			{
				return this.GetTable<Fisioterapeuta>();
			}
		}
		
		public System.Data.Linq.Table<Ombro> Ombros
		{
			get
			{
				return this.GetTable<Ombro>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Pacientes
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Possui> Possuis
		{
			get
			{
				return this.GetTable<Possui>();
			}
		}
		
		public System.Data.Linq.Table<Punho> Punhos
		{
			get
			{
				return this.GetTable<Punho>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aluno")]
	public partial class Aluno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _matricula;
		
		private System.Nullable<int> _idAvaliador;
		
		private EntityRef<Avaliador> _Avaliador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmatriculaChanging(int value);
    partial void OnmatriculaChanged();
    partial void OnidAvaliadorChanging(System.Nullable<int> value);
    partial void OnidAvaliadorChanged();
    #endregion
		
		public Aluno()
		{
			this._Avaliador = default(EntityRef<Avaliador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricula", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				if ((this._matricula != value))
				{
					this.OnmatriculaChanging(value);
					this.SendPropertyChanging();
					this._matricula = value;
					this.SendPropertyChanged("matricula");
					this.OnmatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliador", DbType="Int")]
		public System.Nullable<int> idAvaliador
		{
			get
			{
				return this._idAvaliador;
			}
			set
			{
				if ((this._idAvaliador != value))
				{
					if (this._Avaliador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliadorChanging(value);
					this.SendPropertyChanging();
					this._idAvaliador = value;
					this.SendPropertyChanged("idAvaliador");
					this.OnidAvaliadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliador_Aluno", Storage="_Avaliador", ThisKey="idAvaliador", OtherKey="idAvaliador", IsForeignKey=true)]
		public Avaliador Avaliador
		{
			get
			{
				return this._Avaliador.Entity;
			}
			set
			{
				Avaliador previousValue = this._Avaliador.Entity;
				if (((previousValue != value) 
							|| (this._Avaliador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliador.Entity = null;
						previousValue.Alunos.Remove(this);
					}
					this._Avaliador.Entity = value;
					if ((value != null))
					{
						value.Alunos.Add(this);
						this._idAvaliador = value.idAvaliador;
					}
					else
					{
						this._idAvaliador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexo")]
	public partial class Sexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _descricao;
		
		private int _idSexo;
		
		private EntitySet<Paciente> _Pacientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    partial void OnidSexoChanging(int value);
    partial void OnidSexoChanged();
    #endregion
		
		public Sexo()
		{
			this._Pacientes = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Pacientes), new Action<Paciente>(this.detach_Pacientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(10)")]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSexo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idSexo
		{
			get
			{
				return this._idSexo;
			}
			set
			{
				if ((this._idSexo != value))
				{
					this.OnidSexoChanging(value);
					this.SendPropertyChanging();
					this._idSexo = value;
					this.SendPropertyChanged("idSexo");
					this.OnidSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Paciente", Storage="_Pacientes", ThisKey="idSexo", OtherKey="idSexo")]
		public EntitySet<Paciente> Pacientes
		{
			get
			{
				return this._Pacientes;
			}
			set
			{
				this._Pacientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = this;
		}
		
		private void detach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Area")]
	public partial class Area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idArea;
		
		private string _descricaoArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAreaChanging(int value);
    partial void OnidAreaChanged();
    partial void OndescricaoAreaChanging(string value);
    partial void OndescricaoAreaChanged();
    #endregion
		
		public Area()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArea", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idArea
		{
			get
			{
				return this._idArea;
			}
			set
			{
				if ((this._idArea != value))
				{
					this.OnidAreaChanging(value);
					this.SendPropertyChanging();
					this._idArea = value;
					this.SendPropertyChanged("idArea");
					this.OnidAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricaoArea", DbType="VarChar(10)")]
		public string descricaoArea
		{
			get
			{
				return this._descricaoArea;
			}
			set
			{
				if ((this._descricaoArea != value))
				{
					this.OndescricaoAreaChanging(value);
					this.SendPropertyChanging();
					this._descricaoArea = value;
					this.SendPropertyChanged("descricaoArea");
					this.OndescricaoAreaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Atende")]
	public partial class Atende
	{
		
		private System.Nullable<int> _idAvaliador;
		
		private System.Nullable<int> _idPaciente;
		
		public Atende()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliador", DbType="Int")]
		public System.Nullable<int> idAvaliador
		{
			get
			{
				return this._idAvaliador;
			}
			set
			{
				if ((this._idAvaliador != value))
				{
					this._idAvaliador = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaciente", DbType="Int")]
		public System.Nullable<int> idPaciente
		{
			get
			{
				return this._idPaciente;
			}
			set
			{
				if ((this._idPaciente != value))
				{
					this._idPaciente = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Avaliacao")]
	public partial class Avaliacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaliacao;
		
		private System.Nullable<int> _idAvaliador;
		
		private System.Nullable<int> _idPaciente;
		
		private System.Nullable<int> _idSexo;
		
		private System.Nullable<int> _lado;
		
		private System.Nullable<System.DateTime> _dtAvaliacao;
		
		private EntitySet<Cotovelo> _Cotovelos;
		
		private EntitySet<Ombro> _Ombros;
		
		private EntitySet<Paciente> _Pacientes;
		
		private EntitySet<Punho> _Punhos;
		
		private EntityRef<Paciente> _Paciente;
		
		private EntityRef<Paciente> _Paciente1;
		
		private EntityRef<Paciente> _Paciente2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaliacaoChanging(int value);
    partial void OnidAvaliacaoChanged();
    partial void OnidAvaliadorChanging(System.Nullable<int> value);
    partial void OnidAvaliadorChanged();
    partial void OnidPacienteChanging(System.Nullable<int> value);
    partial void OnidPacienteChanged();
    partial void OnidSexoChanging(System.Nullable<int> value);
    partial void OnidSexoChanged();
    partial void OnladoChanging(System.Nullable<int> value);
    partial void OnladoChanged();
    partial void OndtAvaliacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndtAvaliacaoChanged();
    #endregion
		
		public Avaliacao()
		{
			this._Cotovelos = new EntitySet<Cotovelo>(new Action<Cotovelo>(this.attach_Cotovelos), new Action<Cotovelo>(this.detach_Cotovelos));
			this._Ombros = new EntitySet<Ombro>(new Action<Ombro>(this.attach_Ombros), new Action<Ombro>(this.detach_Ombros));
			this._Pacientes = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Pacientes), new Action<Paciente>(this.detach_Pacientes));
			this._Punhos = new EntitySet<Punho>(new Action<Punho>(this.attach_Punhos), new Action<Punho>(this.detach_Punhos));
			this._Paciente = default(EntityRef<Paciente>);
			this._Paciente1 = default(EntityRef<Paciente>);
			this._Paciente2 = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliacao", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaliacao
		{
			get
			{
				return this._idAvaliacao;
			}
			set
			{
				if ((this._idAvaliacao != value))
				{
					this.OnidAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._idAvaliacao = value;
					this.SendPropertyChanged("idAvaliacao");
					this.OnidAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliador", DbType="Int")]
		public System.Nullable<int> idAvaliador
		{
			get
			{
				return this._idAvaliador;
			}
			set
			{
				if ((this._idAvaliador != value))
				{
					if (this._Paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliadorChanging(value);
					this.SendPropertyChanging();
					this._idAvaliador = value;
					this.SendPropertyChanged("idAvaliador");
					this.OnidAvaliadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaciente", DbType="Int")]
		public System.Nullable<int> idPaciente
		{
			get
			{
				return this._idPaciente;
			}
			set
			{
				if ((this._idPaciente != value))
				{
					if (this._Paciente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPacienteChanging(value);
					this.SendPropertyChanging();
					this._idPaciente = value;
					this.SendPropertyChanged("idPaciente");
					this.OnidPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSexo", DbType="Int")]
		public System.Nullable<int> idSexo
		{
			get
			{
				return this._idSexo;
			}
			set
			{
				if ((this._idSexo != value))
				{
					if (this._Paciente2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSexoChanging(value);
					this.SendPropertyChanging();
					this._idSexo = value;
					this.SendPropertyChanged("idSexo");
					this.OnidSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lado", DbType="Int")]
		public System.Nullable<int> lado
		{
			get
			{
				return this._lado;
			}
			set
			{
				if ((this._lado != value))
				{
					this.OnladoChanging(value);
					this.SendPropertyChanging();
					this._lado = value;
					this.SendPropertyChanged("lado");
					this.OnladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtAvaliacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtAvaliacao
		{
			get
			{
				return this._dtAvaliacao;
			}
			set
			{
				if ((this._dtAvaliacao != value))
				{
					this.OndtAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._dtAvaliacao = value;
					this.SendPropertyChanged("dtAvaliacao");
					this.OndtAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Cotovelo", Storage="_Cotovelos", ThisKey="idAvaliacao", OtherKey="idAvaliacao")]
		public EntitySet<Cotovelo> Cotovelos
		{
			get
			{
				return this._Cotovelos;
			}
			set
			{
				this._Cotovelos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Ombro", Storage="_Ombros", ThisKey="idAvaliacao", OtherKey="idAvaliacao")]
		public EntitySet<Ombro> Ombros
		{
			get
			{
				return this._Ombros;
			}
			set
			{
				this._Ombros.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Paciente", Storage="_Pacientes", ThisKey="idAvaliacao", OtherKey="idAvaliacao")]
		public EntitySet<Paciente> Pacientes
		{
			get
			{
				return this._Pacientes;
			}
			set
			{
				this._Pacientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Punho", Storage="_Punhos", ThisKey="idAvaliacao", OtherKey="idAvaliacao")]
		public EntitySet<Punho> Punhos
		{
			get
			{
				return this._Punhos;
			}
			set
			{
				this._Punhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao", Storage="_Paciente", ThisKey="idAvaliador", OtherKey="idPaciente", IsForeignKey=true)]
		public Paciente Paciente
		{
			get
			{
				return this._Paciente.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente.Entity;
				if (((previousValue != value) 
							|| (this._Paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente.Entity = null;
						previousValue.Avaliacaos.Remove(this);
					}
					this._Paciente.Entity = value;
					if ((value != null))
					{
						value.Avaliacaos.Add(this);
						this._idAvaliador = value.idPaciente;
					}
					else
					{
						this._idAvaliador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Paciente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao1", Storage="_Paciente1", ThisKey="idPaciente", OtherKey="idPaciente", IsForeignKey=true)]
		public Paciente Paciente1
		{
			get
			{
				return this._Paciente1.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente1.Entity;
				if (((previousValue != value) 
							|| (this._Paciente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente1.Entity = null;
						previousValue.Avaliacaos1.Remove(this);
					}
					this._Paciente1.Entity = value;
					if ((value != null))
					{
						value.Avaliacaos1.Add(this);
						this._idPaciente = value.idPaciente;
					}
					else
					{
						this._idPaciente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Paciente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao2", Storage="_Paciente2", ThisKey="idSexo", OtherKey="idPaciente", IsForeignKey=true)]
		public Paciente Paciente2
		{
			get
			{
				return this._Paciente2.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente2.Entity;
				if (((previousValue != value) 
							|| (this._Paciente2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente2.Entity = null;
						previousValue.Avaliacaos2.Remove(this);
					}
					this._Paciente2.Entity = value;
					if ((value != null))
					{
						value.Avaliacaos2.Add(this);
						this._idSexo = value.idPaciente;
					}
					else
					{
						this._idSexo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Paciente2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cotovelos(Cotovelo entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = this;
		}
		
		private void detach_Cotovelos(Cotovelo entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = null;
		}
		
		private void attach_Ombros(Ombro entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = this;
		}
		
		private void detach_Ombros(Ombro entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = null;
		}
		
		private void attach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = this;
		}
		
		private void detach_Pacientes(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = null;
		}
		
		private void attach_Punhos(Punho entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = this;
		}
		
		private void detach_Punhos(Punho entity)
		{
			this.SendPropertyChanging();
			entity.Avaliacao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Avaliador")]
	public partial class Avaliador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaliador;
		
		private string _nomeAvaliador;
		
		private EntitySet<Aluno> _Alunos;
		
		private EntitySet<Fisioterapeuta> _Fisioterapeutas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaliadorChanging(int value);
    partial void OnidAvaliadorChanged();
    partial void OnnomeAvaliadorChanging(string value);
    partial void OnnomeAvaliadorChanged();
    #endregion
		
		public Avaliador()
		{
			this._Alunos = new EntitySet<Aluno>(new Action<Aluno>(this.attach_Alunos), new Action<Aluno>(this.detach_Alunos));
			this._Fisioterapeutas = new EntitySet<Fisioterapeuta>(new Action<Fisioterapeuta>(this.attach_Fisioterapeutas), new Action<Fisioterapeuta>(this.detach_Fisioterapeutas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaliador
		{
			get
			{
				return this._idAvaliador;
			}
			set
			{
				if ((this._idAvaliador != value))
				{
					this.OnidAvaliadorChanging(value);
					this.SendPropertyChanging();
					this._idAvaliador = value;
					this.SendPropertyChanged("idAvaliador");
					this.OnidAvaliadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeAvaliador", DbType="VarChar(10)")]
		public string nomeAvaliador
		{
			get
			{
				return this._nomeAvaliador;
			}
			set
			{
				if ((this._nomeAvaliador != value))
				{
					this.OnnomeAvaliadorChanging(value);
					this.SendPropertyChanging();
					this._nomeAvaliador = value;
					this.SendPropertyChanged("nomeAvaliador");
					this.OnnomeAvaliadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliador_Aluno", Storage="_Alunos", ThisKey="idAvaliador", OtherKey="idAvaliador")]
		public EntitySet<Aluno> Alunos
		{
			get
			{
				return this._Alunos;
			}
			set
			{
				this._Alunos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliador_Fisioterapeuta", Storage="_Fisioterapeutas", ThisKey="idAvaliador", OtherKey="idAvaliador")]
		public EntitySet<Fisioterapeuta> Fisioterapeutas
		{
			get
			{
				return this._Fisioterapeutas;
			}
			set
			{
				this._Fisioterapeutas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.Avaliador = this;
		}
		
		private void detach_Alunos(Aluno entity)
		{
			this.SendPropertyChanging();
			entity.Avaliador = null;
		}
		
		private void attach_Fisioterapeutas(Fisioterapeuta entity)
		{
			this.SendPropertyChanging();
			entity.Avaliador = this;
		}
		
		private void detach_Fisioterapeutas(Fisioterapeuta entity)
		{
			this.SendPropertyChanging();
			entity.Avaliador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cotovelo")]
	public partial class Cotovelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCotovelo;
		
		private System.Nullable<int> _idAvaliacao;
		
		private System.Nullable<int> _flexao;
		
		private System.Nullable<int> _extensao;
		
		private EntityRef<Avaliacao> _Avaliacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCotoveloChanging(int value);
    partial void OnidCotoveloChanged();
    partial void OnidAvaliacaoChanging(System.Nullable<int> value);
    partial void OnidAvaliacaoChanged();
    partial void OnflexaoChanging(System.Nullable<int> value);
    partial void OnflexaoChanged();
    partial void OnextensaoChanging(System.Nullable<int> value);
    partial void OnextensaoChanged();
    #endregion
		
		public Cotovelo()
		{
			this._Avaliacao = default(EntityRef<Avaliacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCotovelo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCotovelo
		{
			get
			{
				return this._idCotovelo;
			}
			set
			{
				if ((this._idCotovelo != value))
				{
					this.OnidCotoveloChanging(value);
					this.SendPropertyChanging();
					this._idCotovelo = value;
					this.SendPropertyChanged("idCotovelo");
					this.OnidCotoveloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliacao", DbType="Int")]
		public System.Nullable<int> idAvaliacao
		{
			get
			{
				return this._idAvaliacao;
			}
			set
			{
				if ((this._idAvaliacao != value))
				{
					if (this._Avaliacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._idAvaliacao = value;
					this.SendPropertyChanged("idAvaliacao");
					this.OnidAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flexao", DbType="Int")]
		public System.Nullable<int> flexao
		{
			get
			{
				return this._flexao;
			}
			set
			{
				if ((this._flexao != value))
				{
					this.OnflexaoChanging(value);
					this.SendPropertyChanging();
					this._flexao = value;
					this.SendPropertyChanged("flexao");
					this.OnflexaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extensao", DbType="Int")]
		public System.Nullable<int> extensao
		{
			get
			{
				return this._extensao;
			}
			set
			{
				if ((this._extensao != value))
				{
					this.OnextensaoChanging(value);
					this.SendPropertyChanging();
					this._extensao = value;
					this.SendPropertyChanged("extensao");
					this.OnextensaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Cotovelo", Storage="_Avaliacao", ThisKey="idAvaliacao", OtherKey="idAvaliacao", IsForeignKey=true)]
		public Avaliacao Avaliacao
		{
			get
			{
				return this._Avaliacao.Entity;
			}
			set
			{
				Avaliacao previousValue = this._Avaliacao.Entity;
				if (((previousValue != value) 
							|| (this._Avaliacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliacao.Entity = null;
						previousValue.Cotovelos.Remove(this);
					}
					this._Avaliacao.Entity = value;
					if ((value != null))
					{
						value.Cotovelos.Add(this);
						this._idAvaliacao = value.idAvaliacao;
					}
					else
					{
						this._idAvaliacao = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disciplina")]
	public partial class Disciplina : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDisciplina;
		
		private string _nomeDisciplina;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDisciplinaChanging(int value);
    partial void OnidDisciplinaChanged();
    partial void OnnomeDisciplinaChanging(string value);
    partial void OnnomeDisciplinaChanged();
    #endregion
		
		public Disciplina()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDisciplina", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDisciplina
		{
			get
			{
				return this._idDisciplina;
			}
			set
			{
				if ((this._idDisciplina != value))
				{
					this.OnidDisciplinaChanging(value);
					this.SendPropertyChanging();
					this._idDisciplina = value;
					this.SendPropertyChanged("idDisciplina");
					this.OnidDisciplinaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomeDisciplina", DbType="VarChar(10)")]
		public string nomeDisciplina
		{
			get
			{
				return this._nomeDisciplina;
			}
			set
			{
				if ((this._nomeDisciplina != value))
				{
					this.OnnomeDisciplinaChanging(value);
					this.SendPropertyChanging();
					this._nomeDisciplina = value;
					this.SendPropertyChanged("nomeDisciplina");
					this.OnnomeDisciplinaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estuda")]
	public partial class Estuda
	{
		
		private System.Nullable<int> _idDisciplina;
		
		private System.Nullable<int> _matricula;
		
		public Estuda()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDisciplina", DbType="Int")]
		public System.Nullable<int> idDisciplina
		{
			get
			{
				return this._idDisciplina;
			}
			set
			{
				if ((this._idDisciplina != value))
				{
					this._idDisciplina = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricula", DbType="Int")]
		public System.Nullable<int> matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				if ((this._matricula != value))
				{
					this._matricula = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fisioterapeuta")]
	public partial class Fisioterapeuta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _crefito;
		
		private System.Nullable<int> _idAvaliador;
		
		private EntityRef<Avaliador> _Avaliador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncrefitoChanging(int value);
    partial void OncrefitoChanged();
    partial void OnidAvaliadorChanging(System.Nullable<int> value);
    partial void OnidAvaliadorChanged();
    #endregion
		
		public Fisioterapeuta()
		{
			this._Avaliador = default(EntityRef<Avaliador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crefito", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int crefito
		{
			get
			{
				return this._crefito;
			}
			set
			{
				if ((this._crefito != value))
				{
					this.OncrefitoChanging(value);
					this.SendPropertyChanging();
					this._crefito = value;
					this.SendPropertyChanged("crefito");
					this.OncrefitoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliador", DbType="Int")]
		public System.Nullable<int> idAvaliador
		{
			get
			{
				return this._idAvaliador;
			}
			set
			{
				if ((this._idAvaliador != value))
				{
					if (this._Avaliador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliadorChanging(value);
					this.SendPropertyChanging();
					this._idAvaliador = value;
					this.SendPropertyChanged("idAvaliador");
					this.OnidAvaliadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliador_Fisioterapeuta", Storage="_Avaliador", ThisKey="idAvaliador", OtherKey="idAvaliador", IsForeignKey=true)]
		public Avaliador Avaliador
		{
			get
			{
				return this._Avaliador.Entity;
			}
			set
			{
				Avaliador previousValue = this._Avaliador.Entity;
				if (((previousValue != value) 
							|| (this._Avaliador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliador.Entity = null;
						previousValue.Fisioterapeutas.Remove(this);
					}
					this._Avaliador.Entity = value;
					if ((value != null))
					{
						value.Fisioterapeutas.Add(this);
						this._idAvaliador = value.idAvaliador;
					}
					else
					{
						this._idAvaliador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ombro")]
	public partial class Ombro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idOmbro;
		
		private System.Nullable<int> _idAvaliacao;
		
		private System.Nullable<int> _flexao;
		
		private System.Nullable<int> _extensao;
		
		private System.Nullable<int> _aducao;
		
		private System.Nullable<int> _abducao;
		
		private System.Nullable<int> _aducaoHorizontal;
		
		private System.Nullable<int> _abducaoHorizontal;
		
		private System.Nullable<int> _rotacaoMedial;
		
		private System.Nullable<int> _rotacaoLateral;
		
		private EntityRef<Avaliacao> _Avaliacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidOmbroChanging(int value);
    partial void OnidOmbroChanged();
    partial void OnidAvaliacaoChanging(System.Nullable<int> value);
    partial void OnidAvaliacaoChanged();
    partial void OnflexaoChanging(System.Nullable<int> value);
    partial void OnflexaoChanged();
    partial void OnextensaoChanging(System.Nullable<int> value);
    partial void OnextensaoChanged();
    partial void OnaducaoChanging(System.Nullable<int> value);
    partial void OnaducaoChanged();
    partial void OnabducaoChanging(System.Nullable<int> value);
    partial void OnabducaoChanged();
    partial void OnaducaoHorizontalChanging(System.Nullable<int> value);
    partial void OnaducaoHorizontalChanged();
    partial void OnabducaoHorizontalChanging(System.Nullable<int> value);
    partial void OnabducaoHorizontalChanged();
    partial void OnrotacaoMedialChanging(System.Nullable<int> value);
    partial void OnrotacaoMedialChanged();
    partial void OnrotacaoLateralChanging(System.Nullable<int> value);
    partial void OnrotacaoLateralChanged();
    #endregion
		
		public Ombro()
		{
			this._Avaliacao = default(EntityRef<Avaliacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOmbro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idOmbro
		{
			get
			{
				return this._idOmbro;
			}
			set
			{
				if ((this._idOmbro != value))
				{
					this.OnidOmbroChanging(value);
					this.SendPropertyChanging();
					this._idOmbro = value;
					this.SendPropertyChanged("idOmbro");
					this.OnidOmbroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliacao", DbType="Int")]
		public System.Nullable<int> idAvaliacao
		{
			get
			{
				return this._idAvaliacao;
			}
			set
			{
				if ((this._idAvaliacao != value))
				{
					if (this._Avaliacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._idAvaliacao = value;
					this.SendPropertyChanged("idAvaliacao");
					this.OnidAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flexao", DbType="Int")]
		public System.Nullable<int> flexao
		{
			get
			{
				return this._flexao;
			}
			set
			{
				if ((this._flexao != value))
				{
					this.OnflexaoChanging(value);
					this.SendPropertyChanging();
					this._flexao = value;
					this.SendPropertyChanged("flexao");
					this.OnflexaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extensao", DbType="Int")]
		public System.Nullable<int> extensao
		{
			get
			{
				return this._extensao;
			}
			set
			{
				if ((this._extensao != value))
				{
					this.OnextensaoChanging(value);
					this.SendPropertyChanging();
					this._extensao = value;
					this.SendPropertyChanged("extensao");
					this.OnextensaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aducao", DbType="Int")]
		public System.Nullable<int> aducao
		{
			get
			{
				return this._aducao;
			}
			set
			{
				if ((this._aducao != value))
				{
					this.OnaducaoChanging(value);
					this.SendPropertyChanging();
					this._aducao = value;
					this.SendPropertyChanged("aducao");
					this.OnaducaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abducao", DbType="Int")]
		public System.Nullable<int> abducao
		{
			get
			{
				return this._abducao;
			}
			set
			{
				if ((this._abducao != value))
				{
					this.OnabducaoChanging(value);
					this.SendPropertyChanging();
					this._abducao = value;
					this.SendPropertyChanged("abducao");
					this.OnabducaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aducaoHorizontal", DbType="Int")]
		public System.Nullable<int> aducaoHorizontal
		{
			get
			{
				return this._aducaoHorizontal;
			}
			set
			{
				if ((this._aducaoHorizontal != value))
				{
					this.OnaducaoHorizontalChanging(value);
					this.SendPropertyChanging();
					this._aducaoHorizontal = value;
					this.SendPropertyChanged("aducaoHorizontal");
					this.OnaducaoHorizontalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abducaoHorizontal", DbType="Int")]
		public System.Nullable<int> abducaoHorizontal
		{
			get
			{
				return this._abducaoHorizontal;
			}
			set
			{
				if ((this._abducaoHorizontal != value))
				{
					this.OnabducaoHorizontalChanging(value);
					this.SendPropertyChanging();
					this._abducaoHorizontal = value;
					this.SendPropertyChanged("abducaoHorizontal");
					this.OnabducaoHorizontalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotacaoMedial", DbType="Int")]
		public System.Nullable<int> rotacaoMedial
		{
			get
			{
				return this._rotacaoMedial;
			}
			set
			{
				if ((this._rotacaoMedial != value))
				{
					this.OnrotacaoMedialChanging(value);
					this.SendPropertyChanging();
					this._rotacaoMedial = value;
					this.SendPropertyChanged("rotacaoMedial");
					this.OnrotacaoMedialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotacaoLateral", DbType="Int")]
		public System.Nullable<int> rotacaoLateral
		{
			get
			{
				return this._rotacaoLateral;
			}
			set
			{
				if ((this._rotacaoLateral != value))
				{
					this.OnrotacaoLateralChanging(value);
					this.SendPropertyChanging();
					this._rotacaoLateral = value;
					this.SendPropertyChanged("rotacaoLateral");
					this.OnrotacaoLateralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Ombro", Storage="_Avaliacao", ThisKey="idAvaliacao", OtherKey="idAvaliacao", IsForeignKey=true)]
		public Avaliacao Avaliacao
		{
			get
			{
				return this._Avaliacao.Entity;
			}
			set
			{
				Avaliacao previousValue = this._Avaliacao.Entity;
				if (((previousValue != value) 
							|| (this._Avaliacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliacao.Entity = null;
						previousValue.Ombros.Remove(this);
					}
					this._Avaliacao.Entity = value;
					if ((value != null))
					{
						value.Ombros.Add(this);
						this._idAvaliacao = value.idAvaliacao;
					}
					else
					{
						this._idAvaliacao = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPaciente;
		
		private System.Nullable<int> _idAvaliacao;
		
		private System.Nullable<int> _idSexo;
		
		private string _nomePaciente;
		
		private System.Nullable<System.DateTime> _dtNasc;
		
		private string _obs;
		
		private EntitySet<Avaliacao> _Avaliacaos;
		
		private EntitySet<Avaliacao> _Avaliacaos1;
		
		private EntitySet<Avaliacao> _Avaliacaos2;
		
		private EntityRef<Avaliacao> _Avaliacao;
		
		private EntityRef<Sexo> _Sexo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPacienteChanging(int value);
    partial void OnidPacienteChanged();
    partial void OnidAvaliacaoChanging(System.Nullable<int> value);
    partial void OnidAvaliacaoChanged();
    partial void OnidSexoChanging(System.Nullable<int> value);
    partial void OnidSexoChanged();
    partial void OnnomePacienteChanging(string value);
    partial void OnnomePacienteChanged();
    partial void OndtNascChanging(System.Nullable<System.DateTime> value);
    partial void OndtNascChanged();
    partial void OnobsChanging(string value);
    partial void OnobsChanged();
    #endregion
		
		public Paciente()
		{
			this._Avaliacaos = new EntitySet<Avaliacao>(new Action<Avaliacao>(this.attach_Avaliacaos), new Action<Avaliacao>(this.detach_Avaliacaos));
			this._Avaliacaos1 = new EntitySet<Avaliacao>(new Action<Avaliacao>(this.attach_Avaliacaos1), new Action<Avaliacao>(this.detach_Avaliacaos1));
			this._Avaliacaos2 = new EntitySet<Avaliacao>(new Action<Avaliacao>(this.attach_Avaliacaos2), new Action<Avaliacao>(this.detach_Avaliacaos2));
			this._Avaliacao = default(EntityRef<Avaliacao>);
			this._Sexo = default(EntityRef<Sexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPaciente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPaciente
		{
			get
			{
				return this._idPaciente;
			}
			set
			{
				if ((this._idPaciente != value))
				{
					this.OnidPacienteChanging(value);
					this.SendPropertyChanging();
					this._idPaciente = value;
					this.SendPropertyChanged("idPaciente");
					this.OnidPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliacao", DbType="Int")]
		public System.Nullable<int> idAvaliacao
		{
			get
			{
				return this._idAvaliacao;
			}
			set
			{
				if ((this._idAvaliacao != value))
				{
					if (this._Avaliacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._idAvaliacao = value;
					this.SendPropertyChanged("idAvaliacao");
					this.OnidAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSexo", DbType="Int")]
		public System.Nullable<int> idSexo
		{
			get
			{
				return this._idSexo;
			}
			set
			{
				if ((this._idSexo != value))
				{
					if (this._Sexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSexoChanging(value);
					this.SendPropertyChanging();
					this._idSexo = value;
					this.SendPropertyChanged("idSexo");
					this.OnidSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomePaciente", DbType="VarChar(10)")]
		public string nomePaciente
		{
			get
			{
				return this._nomePaciente;
			}
			set
			{
				if ((this._nomePaciente != value))
				{
					this.OnnomePacienteChanging(value);
					this.SendPropertyChanging();
					this._nomePaciente = value;
					this.SendPropertyChanged("nomePaciente");
					this.OnnomePacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dtNasc", DbType="DateTime")]
		public System.Nullable<System.DateTime> dtNasc
		{
			get
			{
				return this._dtNasc;
			}
			set
			{
				if ((this._dtNasc != value))
				{
					this.OndtNascChanging(value);
					this.SendPropertyChanging();
					this._dtNasc = value;
					this.SendPropertyChanged("dtNasc");
					this.OndtNascChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_obs", DbType="VarChar(1000)")]
		public string obs
		{
			get
			{
				return this._obs;
			}
			set
			{
				if ((this._obs != value))
				{
					this.OnobsChanging(value);
					this.SendPropertyChanging();
					this._obs = value;
					this.SendPropertyChanged("obs");
					this.OnobsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao", Storage="_Avaliacaos", ThisKey="idPaciente", OtherKey="idAvaliador")]
		public EntitySet<Avaliacao> Avaliacaos
		{
			get
			{
				return this._Avaliacaos;
			}
			set
			{
				this._Avaliacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao1", Storage="_Avaliacaos1", ThisKey="idPaciente", OtherKey="idPaciente")]
		public EntitySet<Avaliacao> Avaliacaos1
		{
			get
			{
				return this._Avaliacaos1;
			}
			set
			{
				this._Avaliacaos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Avaliacao2", Storage="_Avaliacaos2", ThisKey="idPaciente", OtherKey="idSexo")]
		public EntitySet<Avaliacao> Avaliacaos2
		{
			get
			{
				return this._Avaliacaos2;
			}
			set
			{
				this._Avaliacaos2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Paciente", Storage="_Avaliacao", ThisKey="idAvaliacao", OtherKey="idAvaliacao", IsForeignKey=true)]
		public Avaliacao Avaliacao
		{
			get
			{
				return this._Avaliacao.Entity;
			}
			set
			{
				Avaliacao previousValue = this._Avaliacao.Entity;
				if (((previousValue != value) 
							|| (this._Avaliacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliacao.Entity = null;
						previousValue.Pacientes.Remove(this);
					}
					this._Avaliacao.Entity = value;
					if ((value != null))
					{
						value.Pacientes.Add(this);
						this._idAvaliacao = value.idAvaliacao;
					}
					else
					{
						this._idAvaliacao = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliacao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Paciente", Storage="_Sexo", ThisKey="idSexo", OtherKey="idSexo", IsForeignKey=true)]
		public Sexo Sexo
		{
			get
			{
				return this._Sexo.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo.Entity;
				if (((previousValue != value) 
							|| (this._Sexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo.Entity = null;
						previousValue.Pacientes.Remove(this);
					}
					this._Sexo.Entity = value;
					if ((value != null))
					{
						value.Pacientes.Add(this);
						this._idSexo = value.idSexo;
					}
					else
					{
						this._idSexo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = this;
		}
		
		private void detach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = null;
		}
		
		private void attach_Avaliacaos1(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = this;
		}
		
		private void detach_Avaliacaos1(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente1 = null;
		}
		
		private void attach_Avaliacaos2(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente2 = this;
		}
		
		private void detach_Avaliacaos2(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Paciente2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Possui")]
	public partial class Possui
	{
		
		private System.Nullable<int> _crefito;
		
		private System.Nullable<int> _idArea;
		
		public Possui()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crefito", DbType="Int")]
		public System.Nullable<int> crefito
		{
			get
			{
				return this._crefito;
			}
			set
			{
				if ((this._crefito != value))
				{
					this._crefito = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArea", DbType="Int")]
		public System.Nullable<int> idArea
		{
			get
			{
				return this._idArea;
			}
			set
			{
				if ((this._idArea != value))
				{
					this._idArea = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Punho")]
	public partial class Punho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPunho;
		
		private System.Nullable<int> _idAvaliacao;
		
		private System.Nullable<int> _flexao;
		
		private System.Nullable<int> _extensao;
		
		private System.Nullable<int> _desvioUlnar;
		
		private System.Nullable<int> _desvioRadial;
		
		private EntityRef<Avaliacao> _Avaliacao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPunhoChanging(int value);
    partial void OnidPunhoChanged();
    partial void OnidAvaliacaoChanging(System.Nullable<int> value);
    partial void OnidAvaliacaoChanged();
    partial void OnflexaoChanging(System.Nullable<int> value);
    partial void OnflexaoChanged();
    partial void OnextensaoChanging(System.Nullable<int> value);
    partial void OnextensaoChanged();
    partial void OndesvioUlnarChanging(System.Nullable<int> value);
    partial void OndesvioUlnarChanged();
    partial void OndesvioRadialChanging(System.Nullable<int> value);
    partial void OndesvioRadialChanged();
    #endregion
		
		public Punho()
		{
			this._Avaliacao = default(EntityRef<Avaliacao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPunho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPunho
		{
			get
			{
				return this._idPunho;
			}
			set
			{
				if ((this._idPunho != value))
				{
					this.OnidPunhoChanging(value);
					this.SendPropertyChanging();
					this._idPunho = value;
					this.SendPropertyChanged("idPunho");
					this.OnidPunhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAvaliacao", DbType="Int")]
		public System.Nullable<int> idAvaliacao
		{
			get
			{
				return this._idAvaliacao;
			}
			set
			{
				if ((this._idAvaliacao != value))
				{
					if (this._Avaliacao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._idAvaliacao = value;
					this.SendPropertyChanged("idAvaliacao");
					this.OnidAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flexao", DbType="Int")]
		public System.Nullable<int> flexao
		{
			get
			{
				return this._flexao;
			}
			set
			{
				if ((this._flexao != value))
				{
					this.OnflexaoChanging(value);
					this.SendPropertyChanging();
					this._flexao = value;
					this.SendPropertyChanged("flexao");
					this.OnflexaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extensao", DbType="Int")]
		public System.Nullable<int> extensao
		{
			get
			{
				return this._extensao;
			}
			set
			{
				if ((this._extensao != value))
				{
					this.OnextensaoChanging(value);
					this.SendPropertyChanging();
					this._extensao = value;
					this.SendPropertyChanged("extensao");
					this.OnextensaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desvioUlnar", DbType="Int")]
		public System.Nullable<int> desvioUlnar
		{
			get
			{
				return this._desvioUlnar;
			}
			set
			{
				if ((this._desvioUlnar != value))
				{
					this.OndesvioUlnarChanging(value);
					this.SendPropertyChanging();
					this._desvioUlnar = value;
					this.SendPropertyChanged("desvioUlnar");
					this.OndesvioUlnarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desvioRadial", DbType="Int")]
		public System.Nullable<int> desvioRadial
		{
			get
			{
				return this._desvioRadial;
			}
			set
			{
				if ((this._desvioRadial != value))
				{
					this.OndesvioRadialChanging(value);
					this.SendPropertyChanging();
					this._desvioRadial = value;
					this.SendPropertyChanged("desvioRadial");
					this.OndesvioRadialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Avaliacao_Punho", Storage="_Avaliacao", ThisKey="idAvaliacao", OtherKey="idAvaliacao", IsForeignKey=true)]
		public Avaliacao Avaliacao
		{
			get
			{
				return this._Avaliacao.Entity;
			}
			set
			{
				Avaliacao previousValue = this._Avaliacao.Entity;
				if (((previousValue != value) 
							|| (this._Avaliacao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Avaliacao.Entity = null;
						previousValue.Punhos.Remove(this);
					}
					this._Avaliacao.Entity = value;
					if ((value != null))
					{
						value.Punhos.Add(this);
						this._idAvaliacao = value.idAvaliacao;
					}
					else
					{
						this._idAvaliacao = default(Nullable<int>);
					}
					this.SendPropertyChanged("Avaliacao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
